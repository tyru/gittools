#!/bin/sh
#
# git-destroy - Remove repository's directory safely.
#

warn() {
    echo "$@" >&2
}
die() {
    echo "$@" >&2
    exit 1
}
is_git_repo() {
    return 0 # TODO
}
ready_to_destroy() {

    if ! is_git_repo; then
        warn "warning: Not a git repository."
        return 1
    fi
    if [ "`git show 2>&1 >/dev/null`" = "fatal: bad default revision 'HEAD'" ]; then
        warn "warning: empty repository."
        return 0
    fi
    if [ "`git diff`" ]; then
        warn "warning: dirty working tree."
        return 2
    fi
    if [ "`git stash list`" ]; then
        warn "warning: 'git stash list' is not empty."
        return 3
    fi
    if [ "`git branch | egrep -v '^[* ] master$'`" ]; then
        warn "warning: branch is not only master."
        return 4
    fi
    # TODO: Check if there is unpushed commits

    return 0
}


# Parse arguments
check_only=false
while [ $# -ne 0 ]; do
    case "$1" in
        --help) shift; break ;;
        --check-only) check_only=true ;;

        --) shift; break ;;
        -*) echo "Unrecognized option: $1" >&2; exit 2 ;;
        *)  break ;;
    esac
    shift
done
[ $# -eq 0 ] && die "Usage: $(basename $0) {repodir}"


# Main
for repo in "$@"; do
    if [ ! -d "$repo" ]; then
        warn "$repo: No such directory"
        continue
    fi
    (cd "$repo" && ready_to_destroy) || continue
    $check_only || rm -fr "$repo"
done
